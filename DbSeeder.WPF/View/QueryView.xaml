<Window x:Class="DbSeeder.WPF.View.QueryView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DbSeeder.WPF.View"
        mc:Ignorable="d"
        Title="QueryView" 
        Height="Auto" 
        Width="800"
        x:Name="QueryViewWindow"
        Loaded="Window_Loaded"
        Topmost="True">
    <DockPanel Background="#FF228DE6">
        <DockPanel.Resources>
            <!-- TextBlock Styling -->
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="Padding" Value="2"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Margin" Value="5 1 5 5"/>
                <Setter Property="FontFamily" Value="Verdana"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </Style>

            <!-- TextBox Styling (input field) -->
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="Padding" Value="2"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="FontStretch" Value="Expanded"/>
                <Setter Property="Margin" Value="5 1 5 5"/>
                <Setter Property="FontWeight" Value="DemiBold"/>
                <Setter Property="FontFamily" Value="Verdana"/>
                <Setter Property="FontSize" Value="12"/>
            </Style>
        </DockPanel.Resources>
        
        <!-- Query View Header - Name Uri, Method-->
        <Grid DockPanel.Dock="Top" 
              Margin="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="6*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!-- Header : Line 0 -->
            <TextBlock
                Grid.Row="0"
                Grid.Column="0"
                Text="Name"/>

            <TextBox
                Grid.Row="0"
                Grid.Column="1"
                Grid.ColumnSpan="2"
                Text="Bind Here Query Name"/>

            <TextBlock
                Grid.Row="0"
                Grid.Column="4"
                HorizontalAlignment="Right"
                x:Name="DateField"/>

            <!-- Input fields : Line 1 -->
            <TextBlock 
                Grid.Row="1"
                Grid.Column="0"
                Text="URI" />

            <ComboBox Grid.Row="1"
                      Grid.Column="1"
                      SelectedIndex="0"
                      Margin="5 0 0 3"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Center"
                      FontWeight="Bold"
                      FontSize="12"
                      FontFamily="Verdana">
                <ComboBoxItem>POST</ComboBoxItem>
                <ComboBoxItem>PATCH</ComboBoxItem>
                <ComboBoxItem>PUT</ComboBoxItem>
                <ComboBoxItem>DELETE</ComboBoxItem>
            </ComboBox>

            <TextBox Grid.Row="1"
                     Grid.Column="2"
                     Grid.ColumnSpan="2"
                     x:Name="Uri"/>

            <TextBlock Grid.Row="1"
                       Grid.Column="2"
                       Grid.ColumnSpan="2"
                       IsHitTestVisible="False" 
                       Text="Example: https://localhost:5001/{uriParam1}/{uriParam2}" 
                       VerticalAlignment="Top" 
                       HorizontalAlignment="Stretch" 
                       Margin="10,0,0,0" 
                       Padding="4"
                       Foreground="DarkGray">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Text, ElementName=Uri}" Value="">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Grid>
        
        <!-- TreeView for the Json-->
        <StackPanel DockPanel.Dock="Top">
            <TreeView x:Name="JsonView"
                        HorizontalContentAlignment="Stretch"
                        HorizontalAlignment="Stretch">
                <TreeView.Resources>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="HeaderTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <Grid ShowGridLines="True"
                                          DockPanel.Dock="Top"  
                                          Margin="5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="3*"/>
                                            <ColumnDefinition Width="3*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>

                                        <!-- Keys -->
                                        <Label Grid.Column="0"
                                               HorizontalAlignment="Stretch" 
                                               Content="{Binding}"
                                               Margin="3" 
                                               BorderBrush="Black" 
                                               BorderThickness="2"/>
                                        <Label Grid.Column="1"
                                               HorizontalAlignment="Stretch" 
                                               Content="Here shouldcome key 2"
                                               Margin="3" 
                                               BorderBrush="Black" 
                                               BorderThickness="2"/>
                                        
                                        <!-- Buttons -->
                                        <Button Content="Add Field"
                                                Grid.Column="2" 
                                                Margin="5"
                                                HorizontalAlignment="Stretch"/>
                                        <Button Content="Add Value"
                                                Grid.Column="3" 
                                                Margin="5"
                                                HorizontalAlignment="Stretch"/>
                                    </Grid>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TreeView.Resources>
            </TreeView>
        </StackPanel>
        
        <!-- Here comes the hidden part when Add Field is added - Collapsed by default -->
        <StackPanel x:Name="AddFieldZone" 
                    DockPanel.Dock="Top"
                    Tag="KeyName" 
                    Visibility="Visible"> <!-- To be updated to collapsed, add eventlistener when Add field button is added to open it. Also add as TAG the keyname as binding - when add Field button is pressed-->
            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Grid.Resources>
                    <!-- Radio Button Style Settings -->
                    <Style TargetType="{x:Type RadioButton}"
                           x:Key="baseRadioButton">
                        <Setter Property="IsChecked" Value="False"/>
                        <Setter Property="Margin" Value="10 5"/>
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="FontFamily" Value="Verdana"/>
                        <Setter Property="BorderThickness" Value="2"/>
                        <Setter Property="Grid.ColumnSpan" Value="2"/>
                        <EventSetter Event="Checked" Handler="KeySelectors_Checked"/>
                    </Style>
                    
                    <Style TargetType="{x:Type RadioButton}"
                           x:Key="invisibleRadioButton">
                        <Setter Property="IsChecked" Value="False"/>
                        <Setter Property="Margin" Value="10 5"/>
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="FontFamily" Value="Verdana"/>
                        <Setter Property="Grid.ColumnSpan" Value="2"/>
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <EventSetter Event="Checked" Handler="FieldTypeSelectors_Checked"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=FieldTypeSelected, Path=IsChecked}"
                                         Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>

                    <Style TargetType="{x:Type CheckBox}">
                        <Setter Property="IsChecked" Value="False"/>
                        <Setter Property="Margin" Value="10 5"/>
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="FontFamily" Value="Verdana"/>
                        <Setter Property="BorderThickness" Value="2"/>
                    </Style>
                </Grid.Resources>

                <!-- KeyName-->
                <TextBlock Grid.Row="0"
                           Grid.Column="0"
                           Text="Key Name"/>

                <TextBox Grid.Row="0"
                         Grid.Column="1"
                         x:Name="KeyName"/>

                <!-- KeySelectors-->
                <StackPanel Grid.Row="1"
                            Grid.Column="1"
                            Orientation="Horizontal">
                    <RadioButton GroupName="KeySelectors"
                                 x:Name="FieldTypeSelected"
                                 Style="{StaticResource baseRadioButton}"
                                 Content="Field"/>
                    <RadioButton GroupName="KeySelectors"
                                 Style="{StaticResource baseRadioButton}"
                                 Content="Map"/>
                    <RadioButton GroupName="KeySelectors"
                                 Style="{StaticResource baseRadioButton}"
                                 Content="Array"/>
                </StackPanel>
                
                <!-- FieldTypeSelectors -->
                <StackPanel Grid.Row="2"
                            Grid.Column="1"
                            Orientation="Horizontal">
                    <RadioButton GroupName="FieldTypeSelectors"
                                 Content="String"
                                 Style="{StaticResource invisibleRadioButton}">
                    </RadioButton>
                    <RadioButton GroupName="FieldTypeSelectors"
                                 Content="Boolean"
                                 Style="{StaticResource invisibleRadioButton}">
                    </RadioButton>
                    <RadioButton GroupName="FieldTypeSelectors"
                                 Content="Integer"
                                 Style="{StaticResource invisibleRadioButton}">
                    </RadioButton>
                    <RadioButton GroupName="FieldTypeSelectors"
                                 Content="Float"
                                 Style="{StaticResource invisibleRadioButton}">
                    </RadioButton>
                </StackPanel>
                
                <!-- ChecBoxes -->
                <StackPanel Grid.Row="3"
                            Grid.Column="1"
                            Orientation="Horizontal">
                    <CheckBox x:Name="UniqueCheckBox"
                              Content="Unique"
                              Checked="UniqueCheckBox_Checked"/>
                    <CheckBox x:Name="RegexCheckBox"
                              Content="Regex"/>
                </StackPanel>

                <Grid Grid.Row="4"
                      Grid.Column="1">
                    <TextBox x:Name="RegexExpression"
                             Margin="10 5"
                             Padding="4">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=RegexCheckBox,   Path=IsChecked}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>

                        <TextBlock IsHitTestVisible="False" 
                                   Text="Regex expression" 
                                   VerticalAlignment="Top" 
                                   HorizontalAlignment="Stretch" 
                                   Margin="10 5" 
                                   Padding="4"
                                   Foreground="DarkGray">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=RegexCheckBox,   Path=IsChecked}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>


                </Grid>

            </Grid>
        </StackPanel>
        
        <!-- Here comes the hidden part when Add Value is added - Collapsed by default -->
        <StackPanel x:Name="AddValueZone"
                    DockPanel.Dock="Top"
                    Tag="KeyName" 
                    Visibility="Visible">
            <!-- To be updated to collapsed, add eventlistener when Add field button is added to open it. Also add as TAG the keyname as binding - when add Field button is pressed-->
            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <TextBlock Text="KeyName"
                       Grid.Row="0"
                       Grid.Column="0"/>
            </Grid>
        </StackPanel>


    </DockPanel>
</Window>
